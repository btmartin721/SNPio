# Workflow name
name: Publish Conda Package

# Trigger the workflow on pushes to tags matching the pattern v*.*.*
on:
  push:
    tags:
      - 'v*.*.*'

# Define the jobs to be executed
jobs:
  build-and-upload:
    # Run the job on a matrix of operating systems
    runs-on: ${{ matrix.os }}
    strategy:
      # Define the matrix of OS and Python versions
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.11", "3.12", "3.13"]

    # Steps to be executed within the job
    steps:
      - name: Checkout code
        # Use the checkout action to get your repository code
        uses: actions/checkout@v4

      - name: Set up Conda (using Miniforge3 with explicit URL)
        # Use the setup-miniconda action to set up the Conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          # Specify the Python version from the matrix
          python-version: ${{ matrix.python-version }}
          # Automatically update Conda itself
          auto-update-conda: true
          # Create and activate a specific environment for building
          activate-environment: snpio-build
          # Use Miniforge3, the recommended successor to Mambaforge
          miniforge-variant: Miniforge3
          # Explicitly provide the installer URL to avoid 404 errors
          # Use a conditional based on the OS matrix variable
          installer-url: ${{ matrix.os == 'ubuntu-latest' && 'https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh' || 'https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-x86_64.sh' }}
          # Force the use of .tar.bz2 packages (often preferred in CI)
          use-only-tar-bz2: true
          # Specify the channels to use, in order of priority
          channels: conda-forge,bioconda,defaults
          # Set channel priority to strict
          channel-priority: strict
          # Prevent auto-activation of the base environment
          auto-activate-base: false

      - name: Install conda-build and anaconda-client
        # Use a login bash shell to ensure the conda environment is sourced
        shell: bash -l {0}
        run: |
          # Miniforge3 also includes mamba, so mamba install is still recommended for speed
          mamba install -y conda-build anaconda-client

        - name: Build Conda package
          shell: bash -l {0}
          env:
          CI: "1"
          run: |
          conda config --set channel_priority strict
          conda config --remove-key channels || true
          conda config --add channels conda-forge
          conda config --add channels bioconda
          conda config --add channels defaults
    
        conda build recipe/ \
            --output-folder conda_build_artifacts \
            --python ${{ matrix.python-version }}
        

      - name: Upload to Anaconda.org
        # Use a login bash shell
        shell: bash -l {0}
        env:
          # Access the Anaconda API token from GitHub secrets
          ANACONDA_API_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
        run: |
          # Upload the built package to Anaconda.org
          # -t $ANACONDA_API_TOKEN: Use the API token for authentication
          # conda_build_artifacts/**/snpio-*.tar.bz2: Pattern to find the built package files
          # --user btmartin721: Specify the Anaconda.org user
          # --label main: Specify the label (e.g., main, dev)
          # --force: Force upload, overwriting if the package already exists
          anaconda -t $ANACONDA_API_TOKEN upload \
            conda_build_artifacts/**/snpio-*.tar.bz2 \
            --user btmartin721 --label main --force
