# This GitHub Actions workflow builds and publishes a Python package to TestPyPI and PyPI,
# and builds and pushes a multi-architecture Docker image to Docker Hub.
# It is triggered by pushes to tags that match the pattern v*.*.*.
# It also updates version files in the repository before building and publishing.
# The workflow includes steps to set up Python, install dependencies, build the package,
# and publish to TestPyPI and PyPI using Twine.
# Additionally, it sets up Docker Buildx for multi-architecture builds and pushes the Docker image
# to Docker Hub with appropriate tags based on the version extracted from the tag name.
# The Docker image is built for both amd64 and arm64 architectures.
name: Publish to TestPyPI, PyPI, and DockerHub

on:
  push:
    tags:
      - 'v*.*.*'  # Only run on semantic version tag pushes

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'        

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Install version file dependencies
        run: pip install tomli-w pyyaml

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
  
      - name: Update version files
        run: python scripts/update_versions.py $VERSION
  
      - name: Clean dist directory
        run: rm -rf dist/
  
      - name: Build package
        run: python -m build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository testpypi dist/*
          echo "TestPyPI upload complete."

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.SNPIO_API_TOKEN2_PYPI }}
        run: |
          twine upload dist/*
          echo "PyPi upload complete."
          sleep 60

      ##########################################
      # Docker Multi-Arch Build and Push
      ##########################################

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_BTMARTIN721 }}

      - name: Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: btmartin721/snpio
          tags: |
            type=semver,pattern={{version}},value=${{ steps.extract_version.outputs.VERSION }}
            type=raw,value=latest

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false  # Disable SBOM/attestation if unsupported on ARM
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Confirm Docker image built
        run: |
          echo "Docker image pushed with tags: ${{ steps.meta.outputs.tags }}"
