name: Auto Version and Tag SNPio Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - 'pyproject.toml'
      - 'recipe/meta.yaml'
      - 'snpio/**'
      - 'tests/**'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'pyproject.toml'
      - 'recipe/meta.yaml'
      - 'snpio/**'
      - 'tests/**'

jobs:
  version-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.11.0
        with:
          versionSpec: '5.12.0'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.11.0

      - name: Print version
        run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "SemVer:     ${{ steps.gitversion.outputs.semVer }}"
          echo "Tag:        v${{ steps.gitversion.outputs.semVer }}"

      - name: Install version update dependencies
        run: pip install tomli-w pyyaml

      - name: Update version in pyproject.toml, meta.yaml, conf.py
        run: python scripts/update_versions.py ${{ steps.gitversion.outputs.semVer }}

      - name: Push commit and tag using PAT
        if: github.event_name != 'pull_request'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}

          git add pyproject.toml recipe/meta.yaml snpio/docs/source/conf.py
          git commit -m "chore: bump version to ${{ steps.gitversion.outputs.semVer }}" || echo "No changes to commit"

          if ! git diff-index --quiet HEAD --; then
            git push origin HEAD --tags
            echo "v${{ steps.gitversion.outputs.semVer }}" > .version_tag
          else
            echo "No changes to push."
            if git rev-parse "v${{ steps.gitversion.outputs.semVer }}" >/dev/null 2>&1; then
              echo "⚠️ Tag v${{ steps.gitversion.outputs.semVer }} already exists."
              OLD_VER="${{ steps.gitversion.outputs.semVer }}"
              MAJ=$(echo "$OLD_VER" | cut -d. -f1)
              MIN=$(echo "$OLD_VER" | cut -d. -f2)
              PATCH=$(echo "$OLD_VER" | cut -d. -f3)
              NEW_VER="${MAJ}.${MIN}.$((PATCH + 1))"
              echo "🔁 Fallback bump to v$NEW_VER"

              python scripts/update_versions.py $NEW_VER
              git add pyproject.toml recipe/meta.yaml snpio/docs/source/conf.py
              git commit -m "chore: fallback bump version to $NEW_VER" || echo "No fallback file changes to commit"
              git push origin HEAD
              git tag "v$NEW_VER"
              git push origin "v$NEW_VER"
              echo "v$NEW_VER" > .version_tag
            else
              git tag "v${{ steps.gitversion.outputs.semVer }}"
              git push origin --tags
              echo "v${{ steps.gitversion.outputs.semVer }}" > .version_tag
            fi
          fi

      - name: Set tag name output
        id: read_tag
        run: echo "tag_name=$(cat .version_tag)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.read_tag.outputs.tag_name }}
          name: Release ${{ steps.read_tag.outputs.tag_name }}
          body: |
            Auto-generated release from GitVersion or fallback tag
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}