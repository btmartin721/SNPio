name: Release - Create Tag and GitHub Release

on:
  workflow_dispatch: # Allows manual triggering
    inputs:
      version_type:
        description: 'Type of version bump (patch, minor, major) or "custom" for specific version'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - custom
      custom_version:
        description: 'Specify custom version (e.g., v1.2.3-rc1). Required if version_type is "custom".'
        required: false

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # To create tags and releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required by github-tag-bump to find existing tags

      - name: Determine bump parameters and new version
        id: version_params
        env:
          VERSION_TYPE: ${{ github.event.inputs.version_type }}
          CUSTOM_VERSION: ${{ github.event.inputs.custom_version }}
        run: |
          echo "BUMP_PARAM=" >> $GITHUB_OUTPUT
          echo "TAG_TO_CREATE=" >> $GITHUB_OUTPUT
          if [[ "$VERSION_TYPE" == "custom" ]]; then
            if [[ -z "$CUSTOM_VERSION" ]]; then
              echo "Error: Custom version must be provided when version_type is 'custom'."
              exit 1
            fi
            echo "TAG_TO_CREATE=$CUSTOM_VERSION" >> $GITHUB_OUTPUT
            echo "New tag will be: $CUSTOM_VERSION"
          else
            echo "BUMP_PARAM=--${VERSION_TYPE}" >> $GITHUB_OUTPUT # e.g., --patch
            echo "Version type to bump: $VERSION_TYPE"
          fi

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-bump@v6.1.0
        with:
          # This action determines the next tag based on existing tags and the bump level.
          # It will use one of --patch, --minor, --major based on version_params output.
          # Or set a custom tag.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.version_type }} # For patch, minor, major
          custom_tag: ${{ steps.version_params.outputs.TAG_TO_CREATE }} # For custom version
          tag_prefix: 'v' # Assumes tags like v1.0.0. Remove if your tags are 1.0.0
          create_annotated_tag: true
          dry_run: false # Set to true for testing

      - name: Log new tag
        run: |
          echo "New tag created: ${{ steps.tag_version.outputs.new_tag }}"

      - name: Create GitHub Release
        if: steps.tag_version.outputs.new_tag != '' # Only run if a new tag was created
        uses: softprops/action-gh-release@v2 # Check for the latest version
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Official release for version ${{ steps.tag_version.outputs.new_tag }} of SNPio.
            Further details can be found in the CHANGELOG.
          generate_release_notes: true
          # draft: false # Set to true to create a draft release
          # prerelease: false # Set to true if it's a pre-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}